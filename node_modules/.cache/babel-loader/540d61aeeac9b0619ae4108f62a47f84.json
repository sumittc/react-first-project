{"ast":null,"code":"import _curry1 from './internal/_curry1';\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\n\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\n\nvar trim = /*#__PURE__*/_curry1(_trim);\n\nexport default trim;","map":{"version":3,"names":["_curry1","ws","zeroWidth","hasProtoTrim","String","prototype","trim","_trim","str","beginRx","RegExp","endRx","replace"],"sources":["E:/01 Developement/ReactJs/class-base-app/node_modules/ramda/es/trim.js"],"sourcesContent":["import _curry1 from './internal/_curry1';\n\nvar ws = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\nvar zeroWidth = '\\u200b';\nvar hasProtoTrim = typeof String.prototype.trim === 'function';\n/**\n * Removes (strips) whitespace from both ends of the string.\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to trim.\n * @return {String} Trimmed version of `str`.\n * @example\n *\n *      R.trim('   xyz  '); //=> 'xyz'\n *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n */\nvar _trim = !hasProtoTrim || /*#__PURE__*/ws.trim() || ! /*#__PURE__*/zeroWidth.trim() ? function trim(str) {\n  var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n  var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n  return str.replace(beginRx, '').replace(endRx, '');\n} : function trim(str) {\n  return str.trim();\n};\nvar trim = /*#__PURE__*/_curry1(_trim);\nexport default trim;"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA,IAAIC,EAAE,GAAG,qEAAqE,oEAArE,GAA4I,cAArJ;AACA,IAAIC,SAAS,GAAG,QAAhB;AACA,IAAIC,YAAY,GAAG,OAAOC,MAAM,CAACC,SAAP,CAAiBC,IAAxB,KAAiC,UAApD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,KAAK,GAAG,CAACJ,YAAD,IAAiB,aAAaF,EAAE,CAACK,IAAH,EAA9B,IAA2C,EAAE,aAAaJ,SAAS,CAACI,IAAV,EAA1D,GAA6E,SAASA,IAAT,CAAcE,GAAd,EAAmB;EAC1G,IAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,OAAOT,EAAP,GAAY,IAAZ,GAAmBA,EAAnB,GAAwB,IAAnC,CAAd;EACA,IAAIU,KAAK,GAAG,IAAID,MAAJ,CAAW,MAAMT,EAAN,GAAW,IAAX,GAAkBA,EAAlB,GAAuB,KAAlC,CAAZ;EACA,OAAOO,GAAG,CAACI,OAAJ,CAAYH,OAAZ,EAAqB,EAArB,EAAyBG,OAAzB,CAAiCD,KAAjC,EAAwC,EAAxC,CAAP;AACD,CAJW,GAIR,SAASL,IAAT,CAAcE,GAAd,EAAmB;EACrB,OAAOA,GAAG,CAACF,IAAJ,EAAP;AACD,CAND;;AAOA,IAAIA,IAAI,GAAG,aAAaN,OAAO,CAACO,KAAD,CAA/B;;AACA,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}