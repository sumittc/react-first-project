{"ast":null,"code":"import _curry2 from './internal/_curry2';\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\n\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n\n  return result;\n});\n\nexport default evolve;","map":{"version":3,"names":["_curry2","evolve","transformations","object","result","transformation","key","type"],"sources":["E:/01 Developement/ReactJs/class-base-app/node_modules/ramda/es/evolve.js"],"sourcesContent":["import _curry2 from './internal/_curry2';\n\n/**\n * Creates a new object by recursively evolving a shallow copy of `object`,\n * according to the `transformation` functions. All non-primitive properties\n * are copied by reference.\n *\n * A `transformation` function will not be invoked if its corresponding key\n * does not exist in the evolved object.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n * @param {Object} transformations The object specifying transformation functions to apply\n *        to the object.\n * @param {Object} object The object to be transformed.\n * @return {Object} The transformed object.\n * @example\n *\n *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n *      var transformations = {\n *        firstName: R.trim,\n *        lastName: R.trim, // Will not get invoked.\n *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n *      };\n *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n */\nvar evolve = /*#__PURE__*/_curry2(function evolve(transformations, object) {\n  var result = {};\n  var transformation, key, type;\n  for (key in object) {\n    transformation = transformations[key];\n    type = typeof transformation;\n    result[key] = type === 'function' ? transformation(object[key]) : transformation && type === 'object' ? evolve(transformation, object[key]) : object[key];\n  }\n  return result;\n});\nexport default evolve;"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,oBAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,MAAM,GAAG,aAAaD,OAAO,CAAC,SAASC,MAAT,CAAgBC,eAAhB,EAAiCC,MAAjC,EAAyC;EACzE,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,cAAJ,EAAoBC,GAApB,EAAyBC,IAAzB;;EACA,KAAKD,GAAL,IAAYH,MAAZ,EAAoB;IAClBE,cAAc,GAAGH,eAAe,CAACI,GAAD,CAAhC;IACAC,IAAI,GAAG,OAAOF,cAAd;IACAD,MAAM,CAACE,GAAD,CAAN,GAAcC,IAAI,KAAK,UAAT,GAAsBF,cAAc,CAACF,MAAM,CAACG,GAAD,CAAP,CAApC,GAAoDD,cAAc,IAAIE,IAAI,KAAK,QAA3B,GAAsCN,MAAM,CAACI,cAAD,EAAiBF,MAAM,CAACG,GAAD,CAAvB,CAA5C,GAA4EH,MAAM,CAACG,GAAD,CAApJ;EACD;;EACD,OAAOF,MAAP;AACD,CATgC,CAAjC;;AAUA,eAAeH,MAAf"},"metadata":{},"sourceType":"module"}