{"ast":null,"code":"import { createElement, useRef, useEffect, useState } from \"react\";\n\nvar styleProps = {\n  display: \"contents\"\n},\n    EventEmitter = a => {\n  var {\n    children: g = null,\n    eventType: b,\n    detail: c,\n    waitUntil: h = Promise.resolve(),\n    bubbles: d,\n    cancelable: e,\n    composed: f\n  } = a,\n      i = useRef(null),\n      [j, k] = useState(!0);\n  return useEffect(() => {\n    h.then(() => k(!1));\n  }, [h]), useEffect(() => {\n    !i.current || j || i.current.dispatchEvent(new CustomEvent(b, {\n      detail: c,\n      bubbles: d,\n      cancelable: e,\n      composed: f\n    }));\n  }, [j, b, c, d, e, f]), createElement(\"div\", {\n    style: styleProps,\n    ref: i\n  }, g);\n};\n\nexport default EventEmitter;","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,MAAxB,EAAgCC,SAAhC,EAAsDC,QAAtD,QAAsE,OAAtE;;IAaMC,UAAU,GAAG;EAAEC,OAAO,EAAE;AAAX,C;IAEbC,YAAY,GAAGC,KAQI;EAAA,IARH;IACpBC,QAAQ,EAARA,CAAQ,GAAG,IADS;IAEpBC,SAAS,EAATA,CAFoB;IAGpBC,MAAM,EAANA,CAHoB;IAIpBC,SAAS,EAATA,CAAS,GAAGC,OAAO,CAACC,OAARD,EAJQ;IAKpBE,OAAO,EAAPA,CALoB;IAMpBC,UAAU,EAAVA,CANoB;IAOpBC,QAAQ,EAARA;EAPoB,IAQGT;EAAA,IACjBU,CAAM,GAAGhB,MAAM,CAAiB,IAAjB,CADE;EAAA,IAGjB,CAACiB,CAAD,EAAYC,CAAZ,IAA4BhB,QAAQ,IAHnB;EAmBvB,OAdAD,SAAS,CAAC,MAAM;IACdS,CAAS,CAACS,IAAVT,CAAe,MAAMQ,CAAY,IAAjCR;EADO,GAEN,CAACA,CAAD,CAFM,CAATT,EAKAA,SAAS,CAAC,MAAM;IACV,CAACe,CAAM,CAACI,OAAR,IAAmBH,CAAnB,IAEJD,CAAM,CAACI,OAAPJ,CAAeK,aAAfL,CACE,IAAIM,WAAJ,CAAgBd,CAAhB,EAA2B;MAAEC,MAAM,EAANA,CAAF;MAAUI,OAAO,EAAPA,CAAV;MAAmBC,UAAU,EAAVA,CAAnB;MAA+BC,QAAQ,EAARA;IAA/B,CAA3B,CADFC,CAFI;EADG,GAMN,CAACC,CAAD,EAAYT,CAAZ,EAAuBC,CAAvB,EAA+BI,CAA/B,EAAwCC,CAAxC,EAAoDC,CAApD,CANM,CALTd,EAcOF,aAAa,CAAC,KAAD,EAAQ;IAAEwB,KAAK,EAAEpB,UAAT;IAAqBqB,GAAG,EAAER;EAA1B,CAAR,EAA4CT,CAA5C,CAApB;;;AAGF,eAAeF,YAAf","names":["createElement","useRef","useEffect","useState","styleProps","display","EventEmitter","a","children","eventType","detail","waitUntil","Promise","resolve","bubbles","cancelable","composed","domRef","isWaiting","setIsWaiting","then","current","dispatchEvent","CustomEvent","style","ref"],"sources":["E:\\Developement\\ReactJs\\class-base-app\\node_modules\\react-event-emitter\\src\\index.ts"],"sourcesContent":["import { createElement, useRef, useEffect, ReactNode, useState } from 'react';\n\ninterface EventEmitterProps {\n  children?: ReactNode;\n  eventType: string;\n  detail?: any;\n  waitUntil?: Promise<any>;\n  bubbles?: boolean;\n  cancelable?: boolean;\n  composed?: boolean;\n}\n\n// just to make sure that the component we use doesn't have any effect on layout\nconst styleProps = { display: 'contents' };\n\nconst EventEmitter = ({\n  children = null,\n  eventType,\n  detail,\n  waitUntil = Promise.resolve(),\n  bubbles,\n  cancelable,\n  composed,\n}: EventEmitterProps) => {\n  const domRef = useRef<HTMLDivElement>(null);\n\n  const [isWaiting, setIsWaiting] = useState(true);\n\n  useEffect(() => {\n    waitUntil.then(() => setIsWaiting(false));\n  }, [waitUntil]);\n\n  // send or resend an event according to props\n  useEffect(() => {\n    if (!domRef.current || isWaiting) return;\n    // send a DOM event\n    domRef.current.dispatchEvent(\n      new CustomEvent(eventType, { detail, bubbles, cancelable, composed }),\n    );\n  }, [isWaiting, eventType, detail, bubbles, cancelable, composed]);\n\n  // render a container to dispatch the DOM event from\n  return createElement('div', { style: styleProps, ref: domRef }, children);\n};\n\nexport default EventEmitter;\n"]},"metadata":{},"sourceType":"module"}